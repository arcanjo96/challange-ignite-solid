{
    "openapi": "3.0.1",
    "info": {
        "title": "Challenge Ignite Documentation API",
        "description": "This is an API Rest",
        "version": "1.0.0",
        "contact": {
            "email": "lucas@teste.com"
        }
    },
    "tags": [
        {
            "name": "users",
            "description": "Operations about user"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "description": "create new user.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "default": {
                        "description": "successful operation",
                        "content": {}
                    }
                }
            },
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "id for user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                }
            }
        },
        "/users/{user_id}/admin": {
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Updated user",
                "description": "Change user to admin.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "id for user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid user",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "admin": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                }
            },
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "petstore_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
                        "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                        }
                    }
                }
            },
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            }
        }
    }
}